# This workflow is meant to test the right config  parsing and matrix build

on:
  push:

permissions:
  contents: write
  actions: read
  pull-requests: write
  checks: write
  packages: write

jobs:
  commit-stage-pass:
    uses: ./.github/workflows/commit_stage.yml
    with:
      test_mode: true
      build_config: '{\"runner_configs\":[{\"labels\":\"ubuntu-22.04\",\"arch\":\"x64\"},{\"labels\":\"ubuntu-22.04-arm\",\"arch\":\"arm64\"},{\"labels\":\"windows-2022\",\"arch\":\"x64\"},{\"labels\":\"macos-14\",\"arch\":\"x64\"},{\"labels\":\"macos-14\",\"arch\":\"arm64\"},{\"labels\":\"macos-14\",\"arch\":\"universal\"}],\"gtest_filter\":\"-MANUAL*\",\"macos_signing_identity\":\"L-ACOUSTICS (4WPJ48N2K4)\",\"package_name\":\"la_networkInterfaceHelper\"}'
    secrets:
      GH_TOKEN: 'my_Token'
      KEYCHAIN_PASSWORD: kp_pass
      APPLE_CERTIFICATES_P12_BASE64_PASSWORD: 'pawd'
      APPLE_CERTIFICATES_P12_BASE64: 'p12_b64'

  check-config:
    needs: commit-stage-pass
    runs-on: ubuntu-latest
    steps:
      - name: Validate workflow outputs match build_config inputs
        shell: bash
        run: |
          # Expected values from build_config input
          expected_package_name="la_networkInterfaceHelper"
          expected_macos_signing_identity="L-ACOUSTICS (4WPJ48N2K4)"
          expected_gtest_filter="-MANUAL*"
          
          # Actual outputs from commit-stage-pass job (remove quotes from JSON strings)
          actual_package_name=$(echo '${{ needs.commit-stage-pass.outputs.LIB_NAME }}' | tr -d '"')
          actual_macos_signing_identity=$(echo '${{ needs.commit-stage-pass.outputs.MACOS_SIGNING_IDENTITY }}' | tr -d '"')
          actual_gtest_filter=$(echo '${{ needs.commit-stage-pass.outputs.GTEST_FILTER }}' | tr -d '"')
          
          echo "=== Validation Results ==="
          
          # Validate package_name/LIB_NAME
          if [[ "$actual_package_name" == "$expected_package_name" ]]; then
            echo "‚úÖ LIB_NAME matches: $actual_package_name"
          else
            echo "‚ùå LIB_NAME mismatch: expected '$expected_package_name', got '$actual_package_name'"
            exit 1
          fi
          
          # Validate macos_signing_identity
          if [[ "$actual_macos_signing_identity" == "$expected_macos_signing_identity" ]]; then
            echo "‚úÖ MACOS_SIGNING_IDENTITY matches: $actual_macos_signing_identity"
          else
            echo "‚ùå MACOS_SIGNING_IDENTITY mismatch: expected '$expected_macos_signing_identity', got '$actual_macos_signing_identity'"
            exit 1
          fi
          
          # Validate gtest_filter
          if [[ "$actual_gtest_filter" == "$expected_gtest_filter" ]]; then
            echo "‚úÖ GTEST_FILTER matches: $actual_gtest_filter"
          else
            echo "‚ùå GTEST_FILTER mismatch: expected '$expected_gtest_filter', got '$actual_gtest_filter'"
            exit 1
          fi
          
          # Validate matrix configuration (check if it contains expected runner configs)
          matrix='${{ needs.commit-stage-pass.outputs.matrix }}'
          echo "Matrix output: $matrix"
          
          # Check for key runner configurations
          expected_runners=("ubuntu-22.04" "ubuntu-22.04-arm" "windows-2022" "macos-14")
          for runner in "${expected_runners[@]}"; do
            if echo "$matrix" | grep -q "$runner"; then
              echo "‚úÖ Matrix contains expected runner: $runner"
            else
              echo "‚ùå Matrix missing expected runner: $runner"
              exit 1
            fi
          done
          
          echo "üéâ All configuration validations passed!"

